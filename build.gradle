plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id "org.sonarqube" version "2.7"
    id 'net.nemerosa.versioning' version '2.6.1'
}

group 'org.liquidengine'

import groovy.json.JsonSlurper

// SETUP VERSION
def versionJson = new JsonSlurper().parseText(new File("$project.projectDir/version.json").text)
def versionExt = System.getProperty("VEXT") ?: System.getenv("VEXT") ?: ""
project.version = versionJson.version + ((versionExt == null || versionExt == "") ? "" : "-" + versionExt)

printProjectInfo()

private void printProjectInfo() {
    println "##################################################"
    println "# Project info:                                  #"
    println sprintf("#     group:    %-33s#", project.group)
    println sprintf("#     name:     %-33s#", project.name)
    println sprintf("#     version:  %-33s#", project.version)
    println "##################################################"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
}

idea { module { downloadJavadoc = true; downloadSources = true } }

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
}

dependencies {
    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation  group: 'org.reflections', name: 'reflections', version: '0.9.11'

    //@formatter:off
    implementation(group: "org.joml", name: "joml", version: joml_version, changing: true)
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j_version, changing: false)
    implementation(group: 'commons-io', name: 'commons-io', version: commons_io)
    implementation(group: 'org.apache.commons', name: 'commons-lang3', version: commons_version, changing: false)
    implementation(group: 'org.apache.commons', name: 'commons-collections4', version: commons_collections, changing: false)
    implementation(group: 'com.google.guava', name: 'guava', version: guava_version, changing: false)
    implementation(group: 'com.google.code.gson', name: 'gson', version: gson_version, changing: false)

    implementation(group: 'org.liquidengine', name: 'cbchain', version: le_cbchain, changing: true)

    implementation(group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true)
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-stb', version: lwjgl_version, changing: true, classifier: 'natives-macos')

    implementation(group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true)
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true, classifier: 'natives-macos')

    implementation(group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true)
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-nanovg', version: lwjgl_version, changing: true, classifier: 'natives-macos')

    implementation(group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true)
    implementation(group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    implementation(group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    implementation(group: 'org.lwjgl', name: 'lwjgl-opengl', version: lwjgl_version, changing: true, classifier: 'natives-macos')

    implementation(group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true)
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-macos')

    implementation(group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true)
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-windows')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-linux')
    runtimeOnly (group: 'org.lwjgl', name: 'lwjgl-yoga', version: lwjgl_version, changing: true, classifier: 'natives-macos')
    //@formatter:on
    testImplementation group: 'junit', name: 'junit', version: '4.11'
}

// Register additional artifacts
tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
    from tasks.javadoc
}

// Publishing configuration
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.named('sourcesJar') {
                classifier = 'sources'
            }
            artifact tasks.named('javadocJar') {
                classifier = 'javadoc'
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            var releasesRepoUrl = uri("https://maven.generations.gg/releases")
            var snapshotsRepoUrl = uri("https://maven.generations.gg/snapshots")
            url = (version.toString().endsWith("SNAPSHOT") || version.toString().startsWith("0")) ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty("repoLogin")?.toString()
                password = project.findProperty("repoPassword")?.toString()
            }
        }
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.named('publish') {
    dependsOn 'sourcesJar'
    dependsOn 'javadocJar'
}
